---
import '@/styles/global.css';
import { fade } from 'astro:transitions';
import { mapPosts } from '@/lib/utils.js';

import Layout from '@/layouts/Layout.astro';
import CardGrid from '@/components/CardGrid.astro';
import { getCollection } from 'astro:content';
import CustomSeparator from '@/components/CustomSeparator.astro';

interface Props {
  categorySlug: string;
  frontmatter: {
    name: string;
    type: 'project' | 'tag';
  };
}
const { frontmatter, categorySlug } = Astro.props;
const { name: categoryName, type: categoryType } = frontmatter;

const filteredProjects = await getCollection('projects', project => {
  if (
    categorySlug === project.data.type.slug ||
    categorySlug === project.data.tag.slug
  ) {
    return project;
  }
});
filteredProjects?.sort((a, b) => (a.data.date > b.data.date ? -1 : 1));

const pageTitle =
  categoryType === 'tag'
    ? 'Categoría: ' + categoryName
    : 'Tipo de Proyecto: ' + categoryName;
const pageDescription = `Proyectos y posts etiquetados con la categoría ${categoryName}`;
---

<Layout {pageTitle} {pageDescription}>
  <section class="flex flex-col gap-4">
    <h2 class="text-2xl font-bold">Proyectos relacionados</h2>
    {
      filteredProjects.length > 0 ? (
        <CardGrid projects={filteredProjects} isTiny />
      ) : (
        <p>No hay proyectos relacionados</p>
      )
    }
  </section>
  <!-- <CustomSeparator class="text-accent my-4" /> -->
  <section class="flex flex-col gap-4">
    <h2 class="text-2xl font-bold">Posts relacionados</h2>
  </section>
</Layout>
<style>
  ul {
    list-style: disc;
  }
  li {
    margin: 0 2rem;
  }
</style>
