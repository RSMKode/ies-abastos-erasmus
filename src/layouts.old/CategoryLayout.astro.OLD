---
import '@/styles/global.css';
import { fade } from 'astro:transitions';
import { mapPosts } from '@/lib/utils.js';

import Layout from '@/layouts/Layout.astro';
import CardGrid from '@/components/CardGrid.astro';

interface Props {
  frontmatter: {
    name: string;
    type: 'project' | 'tag';
  };
}

const { frontmatter } = Astro.props;
const { name: categoryName, type: categoryType } = frontmatter;

const allProjects = await Astro.glob('/src/pages/projects/**/*.md');
const allPosts = await Astro.glob('/src/pages/posts/**/*.md');
const allCategories = await Astro.glob('/src/pages/categories/**/*.md');

const filteredProjects = allProjects.filter(project => {
  const { tag, type } = project.frontmatter;
  if (categoryType === 'project') return type.includes(categoryName);
  if (categoryType === 'tag') return tag.includes(categoryName);
});

const filteredPosts = allPosts.filter(post => {
  const { project: projectName } = post.frontmatter;
  return filteredProjects.some(
    project => project.frontmatter.title === projectName
  );
});

const mappedFilteredPosts = mapPosts({
  posts: filteredPosts,
  projects: filteredProjects,
  categories: allCategories,
});

const pageTitle =
  categoryType === 'tag'
    ? 'Categoría: ' + categoryName
    : 'Tipo de Proyecto: ' + categoryName;
const pageDescription = `Proyectos y posts etiquetados con la categoría ${categoryName}`;
---

<Layout {pageTitle} {pageDescription}>
  <section class="">
    {filteredProjects.map(project => <div>{project.frontmatter.title}</div>)}
    <!-- {filteredPosts.map((post) => <div>{post.frontmatter.title}</div>)} -->
    <CardGrid posts={mappedFilteredPosts} isTiny={false} />
  </section>
</Layout>
<style>
  ul {
    list-style: disc;
  }
  li {
    margin: 0 2rem;
  }
</style>
