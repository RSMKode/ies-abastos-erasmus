---
// export interface Props {
//   images: string[];
//   slidesPerView: number;
// }

const { images, slidesPerView = 1 } = Astro.props;
---

<div
  class={'animate-blurred-fade-in bg-black/40 rounded-lg p-2 ' +
    Astro.props.class}>
  {
    Array.isArray(images) && images.length > 0 ? (
      <swiper-container
        space-between="10"
        pagination="true"
        pagination-clickable="true"
        autoplay="true"
        loop="true"
        navigation="true"
        slidesPerView="2">
        {images.map(image => (
          <swiper-slide>
            <img
              src={image}
              alt=""
              class="h-[14rem] sm:h-[18rem] md:h-[20rem]  object-cover rounded-lg"
            />
          </swiper-slide>
        ))}
      </swiper-container>
    ) : (
      <img src={images} alt="" class="rounded-lg mx-auto" />
    )
  }
</div>
<script>
  document.addEventListener('astro:page-load', () => {
    // swiper element
    const swiperEl = document.querySelector('swiper-container');

    // swiper parameters
    const swiperParams = {
      breakpoints: {
        900: {
          slidesPerView: 2,
        },
      },
      on: {
        init() {
          // ...
        },
      },
    };

    // if (window.scr < 600) {
    //   swiperEl.setAttribute('slidesPerView', 1);
    // }

    // now we need to assign all parameters to Swiper element
    // @ts-ignore
    Object.assign(swiperEl, swiperParams);

    // and now initialize it
    // @ts-ignore
    swiperEl.initialize();
  });
</script>
<script
  is:inline
  src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-element-bundle.min.js"
></script>
<style>
  /* img {
    width: 100%;
    object-fit: cover;
  } */

  swiper-container {
    width: 100%;
    height: 100%;
  }

  swiper-slide {
    text-align: center;
    font-size: 18px;
    /* background: hsl(var(--color-gradient)); */
    display: grid;
    place-content: center;
  }

  swiper-container::part(bullet-active) {
    background-color: hsl(var(--color-accent));
  }
  swiper-container::part(button-prev),
  swiper-container::part(button-next) {
    color: hsl(var(--color-accent));
  }
</style>
