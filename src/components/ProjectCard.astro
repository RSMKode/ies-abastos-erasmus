---
import { getEntry } from 'astro:content';
import Badge from './Badge.astro';
// import { normalizeProjectTag } from "@/lib/utils";

// import Badge from "./Badge.astro";

// interface Props {
//   url: string;
//   projectData: {
//     title: string;
//     date: string;
//     description: string;
//     author: string;
//     images?: string;
//     imagesAlt?: string;
//     videoUrl?: string;
//     project: string[];
//     tags: string[];
//   };
// }

const { linkUrl, projectData, isTiny } = Astro.props;

const { author, title, description, date, images, videoUrl, type, tag } =
  projectData;

const projectType = await getEntry(type);
console.log('projectType', projectType);

const projectTag = await getEntry(tag);
console.log('projectTag', projectTag);

const projectCategories =
  projectType && projectTag ? [projectType, projectTag] : [];

const d = new Date(date);
const formattedDate = `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;
---

<article
  class={'text-white flex bg-primary rounded-lg h-full border-2 border-transparent hover:border-accent hover:scale-[1.01] transition duration-300 group drop-shadow-xl hover:shadow-accent hover:shadow-[0_0_8px_var(--tw-shadow-color)] overflow-hidden relative ' +
    (isTiny ? 'flex-row ' : 'flex-col ') +
    Astro.props.class}
  style={Astro.props.style}>
  {linkUrl && <a href={linkUrl} class="absolute inset-0 z-10" />}
  {
    images && !isTiny && (
      <header class="overflow-hidden">
        <img src={images} class="object-cover w-full" />
      </header>
    )
  }
  <section
    class="relative flex flex-col gap-2 p-4 shadow-black [text-shadow:_2px_2px_5px_var(--tw-shadow-color)] w-full">
    {
      images && (
        <img
          src={images}
          class={
            'absolute inset-0 w-full h-min duration-500 opacity-0 blur group-hover:opacity-50 -z-10 ' +
            (!isTiny && '-scale-y-100 mirror')
          }
        />
      )
    }

    <header class="flex flex-col gap-1 text-accent">
      <h4 class="text-lg text-secondary/70">{author}</h4>
      <h3 class="text-xl">{title}</h3>
    </header>

    <section class="flex flex-col gap-2 w-full">
      <div
        class="flex flex-wrap gap-2 text-blue-900 font-bold [text-shadow:none]">
        {
          projectCategories.length > 0 &&
            projectCategories.map(category => (
              <a
                class="z-20 hover:-translate-y-[0.2rem]  hover:brightness-125 transition duration-200"
                href={`/categories/${category?.slug}`}>
                <Badge class="bg-accent ">{category?.data.name}</Badge>
              </a>
            ))
        }
      </div>
      <p class="text-ellipsis">{description}</p>
    </section>

    <footer>
      <p>{formattedDate}</p>
    </footer>
  </section>
</article>
<style>
  .mirror {
    mask-images: linear-gradient(to top, black 60%, transparent 90%);
    /* filter: blur(8px); */
  }
</style>
